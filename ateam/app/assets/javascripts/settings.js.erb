
	
	function setPeriodType(){
		switch(gon.team.num_periods){
			case "4" :
				$("#team-info-quarters").prop('checked', true);
				break;
			case "2" :
				$("#team-info-halves").prop('checked', true);
				break;
		}
	}


	function initialize_stats_kept(){
		var len = gon.non_default_collectable_belongs.length;
		for (var i = 0; i < len; i++) {
			adv_stat_add_check(gon.non_default_collectable_belongs[i].stat_list_id, true)
			team_adv_stat_add_check(gon.non_default_collectable_belongs[i].stat_list_id, true)
			
		}
	}

	function initialize_adv_belongs(){
		non_default_team_adv_belongs = gon.non_default_team_adv_belongs.map(x => x.stat_list_id)
		non_default_adv_belongs = gon.non_default_adv_belongs.map(x => x.stat_list_id)
	}

	function team_adv_stat_belongs(stat_id){
		var len = non_default_team_adv_belongs.length;
		for(var i = 0; i < len; i++){
			if(stat_id == non_default_team_adv_belongs[i]){
				return true
			}
		}
		return false;
	}

	function adv_stat_belongs(stat_id){
		var len = non_default_adv_belongs.length;
		for(var i = 0; i < len; i++){
			if(stat_id == non_default_adv_belongs[i]){
				return true
			}
		}
		return false;
	}



	function initialize_players(){
		var len = gon.players.length;
		for (var i = 0; i < len; i++) {
			curr_players.push(gon.players[i].nickname)
			curr_player_ids.push(gon.players[i].id)
			add_member_dom(gon.players[i].id, member_name)
		}
	}

	function initialize_coaches(){
		var lne = gon.coaches.length;
		for (var i = 0; i < len; i++) {
			curr_coaches.push(gon.coaches[i].nickname)
			curr_coach_ids.push(gon.coaches[i].id)
			add_member_dom(gon.coaches[i].id, member_name)
		}
	}

	function initialize_managers(){
		var len = gon.managers.length;
		for (var i = 0; i < len; i++) {
			curr_managers.push(gon.managers[i].nickname)
			curr_manager_ids.push(gon.managers[i].id)
			add_member_dom(gon.managers[i].id, member_name)
		}
	}


	function add_settings_member_player(){
		
	}


	// function remove_player(button){
	// 	var r = confirm("Are you sure you want to remove this player? Once you submit the action cannot be undone");
	// 	if (r == true) {
	// 		  var player = button.childNodes[0].innerText
	// 		var index = curr_players.indexOf(player)
	// 		if(index >= 0){
	// 			remove_players.push(curr_player_ids[index])
	// 			$(button).remove();
	// 		}
	// 		else{
	// 			new_players.splice(new_players.indexOf(player),1)
	// 			$(button).remove();
	// 		}
	// 	}
	// }

	// function remove_coach(button){
	// 	var r = confirm("Are you sure you want to remove this coach? Once you submit cannot be undone");
	// 	if (r == true) {
	// 		var coach = button.childNodes[0].innerText
	// 		var index = curr_coaches.indexOf(coach)
	// 		if(index >= 0){
	// 			remove_coaches.push(curr_coach_ids[index])
	// 			$(button).remove();
	// 		}
	// 		else{
	// 			new_coaches.splice(new_coaches.indexOf(coach),1)
	// 			$(button).remove();
	// 		}
	// 	}
	// }


	function submit_edit_team(){
		var team_name = $("#enter-team-name").val()
		var minutes_p_q = $("#minutes-per-quarter").val()
		var username = $("#enter-unique-username").val()
		var password = $("#choose-password").val()
		var url = "/teams/" + <%=@team_id%> + "/settings/"
		$.ajax({
	      url: url,
	      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
	      type: "post",
	      data_type: 'json',
	      data: {stats_to_add: stats_to_add, stats_to_remove: stats_to_remove, new_players: new_players, remove_players: remove_players, new_coaches: new_coaches, remove_coaches: remove_coaches, team_name: team_name, minutes_p_q: minutes_p_q, username: username, password: password}
	    });
	}










